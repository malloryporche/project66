//layout mixins - start

@mixin mkdTableLayout() {
    position: relative;
    display: table;
    table-layout: fixed;
    height: 100%;
    width: 100%;
}

@mixin mkdTableCellLayout() {
    position: relative;
    display: table-cell;
    height: 100%;
    width: 100%;
    vertical-align: middle;
}

@mixin mkdRelativeHolderLayout() {
    position: relative;
    display: inline-block;
    width: 100%;
    vertical-align: middle;
}

@mixin mkdAbsoluteHolderLayout() {
    position: absolute;
    display: block;
    width: 100%;
    height: 100%;
    top: 0;
    left: 0;
}

@mixin mkdTypographyLayout() {
    color: inherit;
    font-family: inherit;
    font-size: inherit;
    font-weight: inherit;
    font-style: inherit;
    line-height: inherit;
    letter-spacing: inherit;
    text-transform: inherit;
}

//layout mixins - end

//transition mixins - start

@mixin mkdTransition($transition-param...) {
    -webkit-transition: $transition-param;
    -moz-transition: $transition-param;
    transition: $transition-param;
}

@mixin mkdTransform($transform-param...) {
    -webkit-transform: $transform-param;
    -moz-transform: $transform-param;
    transform: $transform-param;
}

@mixin mkdAnimation($animation-param...) {
    -webkit-animation: $animation-param;
    -moz-animation: $animation-param;
    animation: $animation-param;
}

@mixin mkdTransformOrigin($animation-param...) {
    -webkit-transform-origin: $animation-param;
    -moz-transform-origin: $animation-param;
    transform-origin: $animation-param;
}

@mixin mkdPlaceholder {
    &::-webkit-input-placeholder {
        @content
    }
    &:-moz-placeholder {
        @content
    }
    &::-moz-placeholder {
        @content
    }
    &:-ms-input-placeholder {
        @content
    }
}

//transition mixins - end

/* Button mixins - start */
@mixin mkdButtonDefaultStyle() {
    font-family: inherit;
    position: relative;
    display: inline-block;
    vertical-align: middle;
    width: auto;
    outline: none;
    line-height: 30px;
    letter-spacing: 0.15em;
    font-weight: 700;
    text-transform: uppercase;
    box-sizing: border-box;
    margin: 0;
    @include mkdTransition(color .2s ease-in-out, background-color .2s ease-in-out, border-color .2s ease-in-out);
}

@mixin mkdButtonTransparentColor() {
    color: $default-text-color;
    background-color: transparent;
}

@mixin mkdButtonSolidColor() {
    color: #fff;
    background-color: $first-main-color;
    border: 2px solid transparent;
}

@mixin mkdButtonSolidHoverColor() {
    color: #fff;
    background-color: $default-btn-hover-background-color;
}

@mixin mkdButtonOutlineColor() {
    color: $first-main-color;
    background-color: transparent;
    border: 1px solid #d3d3d3;
}

@mixin mkdButtonOutlineHoverColor() {
    color: #fff;
    background-color: $first-main-color;
    border-color: $first-main-color;
}

@mixin mkdButtonSmallParams() {
    padding: 11px 36px;
}

@mixin mkdButtonMediumParams() {
    padding: 13px 46px;
    font-size: 12px;
}

@mixin mkdButtonLargeParams() {
    padding: 13px 66px;
}

@mixin mkdButtonHugeParams() {
    display: block;
    text-align: center;
    padding: 13px 46px;
}

/* Button mixins - end */

//media query mixins - start

@mixin laptop-landscape-large {
    @media only screen and (max-width: map-get($breakpoints, laptop-landscape-large)) {
        @content;
    }
}

@mixin ipad-pro-landscape {
    @media only screen and (max-width: map-get($breakpoints, ipad-pro-landscape)) {
        @content;
    }
}

@mixin laptop-landscape-medium {
    @media only screen and (max-width: map-get($breakpoints, laptop-landscape-medium)) {
        @content;
    }
}

@mixin laptop-landscape {
    @media only screen and (max-width: map-get($breakpoints, laptop-landscape)) {
        @content;
    }
}

@mixin ipad-landscape {
    @media only screen and (max-width: map-get($breakpoints, ipad-landscape)) {
        @content;
    }
}

@mixin ipad-portrait {
    @media only screen and (max-width: map-get($breakpoints, ipad-portrait)) {
        @content;
    }
}

@mixin phone-landscape {
    @media only screen and (max-width: map-get($breakpoints, phone-landscape)) {
        @content;
    }
}

@mixin phone-portrait {
    @media only screen and (max-width: map-get($breakpoints, phone-portrait)) {
        @content;
    }
}

@mixin smaller-phone-portrait {
    @media only screen and (max-width: map-get($breakpoints, smaller-phone-portrait)) {
        @content;
    }
}

//media query mixins - end

//animation mixin - start

@mixin keyframes($name) {
    @-webkit-keyframes #{$name} {
        @content
    }
;
    @keyframes #{$name} {
        @content
    }
;
}

@mixin animation($name, $duration, $repeat, $timing, $delay) {
    -webkit-animation-name: $name;
    -webkit-animation-duration: $duration;
    -webkit-animation-iteration-count: $repeat;
    -webkit-animation-timing-function: $timing;
    -webkit-animation-delay: $delay;
    -webkit-animation-fill-mode: forwards; /* this prevents the animation from restarting! */

    animation-name: $name;
    animation-duration: $duration;
    animation-iteration-count: $repeat;
    animation-timing-function: $timing;
    animation-delay: $delay;
    animation-fill-mode: forwards; /* this prevents the animation from restarting! */
}

//animation mixin - end